/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Escrow, EscrowInterface } from "../../contracts/Escrow";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Escrow.OfferStatus",
        name: "toStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "ClaimToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "FinishOffer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "NewOffer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "cancelOffer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "getOffer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userWallet",
        type: "address",
      },
    ],
    name: "getOffer",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "u",
        type: "address",
      },
    ],
    name: "offerPerUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenType",
        type: "uint8",
      },
    ],
    name: "verifyOfferIntegrity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060048190556005819055600655610ec78061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80639a2bd58411610076578063bc197c811161005b578063bc197c811461017f578063ef706adf1461019e578063f23a6e61146101b157600080fd5b80639a2bd5841461013d578063b9520ce41461015d57600080fd5b806301ffc9a7146100a8578063150b7a02146100d057806330c722c5146101075780634579268a1461011a575b600080fd5b6100bb6100b63660046108ec565b6101d0565b60405190151581526020015b60405180910390f35b6100ee6100de3660046109f0565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016100c7565b6100bb610115366004610a58565b610207565b61012d610128366004610aa6565b61036d565b6040516100c79493929190610abf565b61015061014b366004610b3b565b610454565b6040516100c79190610b56565b61017061016b366004610b9a565b6104c0565b6040516100c793929190610c04565b6100ee61018d366004610d1b565b63bc197c8160e01b95945050505050565b6100bb6101ac366004610aa6565b6107bd565b6100ee6101bf366004610dc5565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b148061020157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006001600160a01b03851661026e5760405162461bcd60e51b815260206004820152602160248201527f4552524f523a2043524541544f525f434f4e54524143545f4e4f545f56414c496044820152601160fa1b60648201526084015b60405180910390fd5b600460ff831611156102c25760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a204e4f545f56414c49445f4f464645525f5459504500000000006044820152606401610265565b600084116103125760405162461bcd60e51b815260206004820152601c60248201527f4552524f523a20544f4b454e49445f4d5553545f504f534954495645000000006044820152606401610265565b600083116103625760405162461bcd60e51b815260206004820152601b60248201527f4552524f523a20414d4f554e545f4d5553545f504f53495449564500000000006044820152606401610265565b506001949350505050565b60008181526002602052604081208054600182015460058301548493849360609391926001600160a01b03918216929091169060ff1660038111156103b4576103b4610e2a565b836004018080546103c490610e40565b80601f01602080910402602001604051908101604052809291908181526020018280546103f090610e40565b801561043d5780601f106104125761010080835404028352916020019161043d565b820191906000526020600020905b81548152906001019060200180831161042057829003601f168201915b505050505090509450945094509450509193509193565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156104b457602002820191906000526020600020905b8154815260200190600101908083116104a0575b50505050509050919050565b60008281526002602090815260408083206001600160a01b0385168452600381018352818420805483518186028101860190945280845260609586958695919391929083018282801561053257602002820191906000526020600020905b81548152602001906001019080831161051e575b505050505090506000815167ffffffffffffffff81111561055557610555610939565b60405190808252806020026020018201604052801561057e578160200160208202803683370190505b5090506000825167ffffffffffffffff81111561059d5761059d610939565b6040519080825280602002602001820160405280156105c6578160200160208202803683370190505b5090506000835167ffffffffffffffff8111156105e5576105e5610939565b60405190808252806020026020018201604052801561060e578160200160208202803683370190505b50905060005b84518110156107ac5760008660030160008c6001600160a01b03166001600160a01b03168152602001908152602001600020600101600087848151811061065d5761065d610e7b565b6020908102919091018101518252818101929092526040908101600020815160808101835281546001600160a01b031681526001820154938101939093526002810154909183019060ff1660048111156106b9576106b9610e2a565b60048111156106ca576106ca610e2a565b81526020016002820160019054906101000a900460ff1660038111156106f2576106f2610e2a565b600381111561070357610703610e2a565b8152505090503385838151811061071c5761071c610e7b565b60200260200101906001600160a01b031690816001600160a01b031681525050806020015184838151811061075357610753610e7b565b6020026020010181815250508060400151600481111561077557610775610e2a565b83838151811061078757610787610e7b565b60ff9092166020928302919091019091015250806107a481610e91565b915050610614565b509196509450925050509250925092565b60008181526002602052604081206001600582015460ff1660038111156107e6576107e6610e2a565b146108335760405162461bcd60e51b815260206004820181905260248201527f4552524f523a204f464645525f5354415455532049534e5420435245415445446044820152606401610265565b60018101546001600160a01b0316331480610857575080546001600160a01b031633145b6108c95760405162461bcd60e51b815260206004820152602860248201527f4552524f523a2045584543555445522049534e542043524541544f52204f522060448201527f45584543555445520000000000000000000000000000000000000000000000006064820152608401610265565b50506000908152600260205260409020600501805460ff19166003179055600190565b6000602082840312156108fe57600080fd5b81356001600160e01b03198116811461091657600080fd5b9392505050565b80356001600160a01b038116811461093457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561097857610978610939565b604052919050565b600082601f83011261099157600080fd5b813567ffffffffffffffff8111156109ab576109ab610939565b6109be601f8201601f191660200161094f565b8181528460208386010111156109d357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610a0657600080fd5b610a0f8561091d565b9350610a1d6020860161091d565b925060408501359150606085013567ffffffffffffffff811115610a4057600080fd5b610a4c87828801610980565b91505092959194509250565b60008060008060808587031215610a6e57600080fd5b610a778561091d565b93506020850135925060408501359150606085013560ff81168114610a9b57600080fd5b939692955090935050565b600060208284031215610ab857600080fd5b5035919050565b60006001600160a01b03808716835260208187168185015260ff86166040850152608060608501528451915081608085015260005b82811015610b105785810182015185820160a001528101610af4565b82811115610b2257600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215610b4d57600080fd5b6109168261091d565b6020808252825182820181905260009190848201906040850190845b81811015610b8e57835183529284019291840191600101610b72565b50909695505050505050565b60008060408385031215610bad57600080fd5b82359150610bbd6020840161091d565b90509250929050565b600081518084526020808501945080840160005b83811015610bf957815160ff1687529582019590820190600101610bda565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b82811015610c465781516001600160a01b031684529284019290840190600101610c21565b5050508381038285015285518082528683019183019060005b81811015610c7b57835183529284019291840191600101610c5f565b50508481036040860152610c8f8187610bc6565b98975050505050505050565b600082601f830112610cac57600080fd5b8135602067ffffffffffffffff821115610cc857610cc8610939565b8160051b610cd782820161094f565b9283528481018201928281019087851115610cf157600080fd5b83870192505b84831015610d1057823582529183019190830190610cf7565b979650505050505050565b600080600080600060a08688031215610d3357600080fd5b610d3c8661091d565b9450610d4a6020870161091d565b9350604086013567ffffffffffffffff80821115610d6757600080fd5b610d7389838a01610c9b565b94506060880135915080821115610d8957600080fd5b610d9589838a01610c9b565b93506080880135915080821115610dab57600080fd5b50610db888828901610980565b9150509295509295909350565b600080600080600060a08688031215610ddd57600080fd5b610de68661091d565b9450610df46020870161091d565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e1e57600080fd5b610db888828901610980565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680610e5457607f821691505b60208210811415610e7557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610eb357634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000809000a";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Escrow> {
    return super.deploy(overrides || {}) as Promise<Escrow>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  override connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
