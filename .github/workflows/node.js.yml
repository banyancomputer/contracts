# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions



name: Contracts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3 
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: 'Create env file'
      run: |
        touch .env
        echo ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }} >> .env
        echo DATAHUB_API_KEY=${{ secrets.DATAHUB_API_KEY }} >> .env
        echo DEPLOYER_PK=${{ secrets.DEPLOYER_PK }} >> .env
        echo EVM_LOGGING=${{ secrets.EVM_LOGGING }} >> .env
        echo REPORT_GAS=${{ secrets.REPORT_GAS }} >> .env
        echo SNOWTRACE_API_KEY=${{ secrets.SNOWTRACE_API_KEY }} >> .env
        echo TOKEN_OWNER_PK=${{ secrets.TOKEN_OWNER_PK }} >> .env        
        
    - name: npm install, build and test
      run: |
        npm ci
        npx hardhat test
        
  deploy:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3 
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: 'Create env file'
      run: |
        touch .env
        echo ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }} >> .env
        echo DATAHUB_API_KEY=${{ secrets.DATAHUB_API_KEY }} >> .env
        echo DEPLOYER_PK=${{ secrets.DEPLOYER_PK }} >> .env
        echo EVM_LOGGING=${{ secrets.EVM_LOGGING }} >> .env
        echo REPORT_GAS=${{ secrets.REPORT_GAS }} >> .env
        echo SNOWTRACE_API_KEY=${{ secrets.SNOWTRACE_API_KEY }} >> .env
        echo TOKEN_OWNER_PK=${{ secrets.TOKEN_OWNER_PK }} >> .env
        echo ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }} >> .env        

    - name: deploy
      run: |
        npm ci
        npx hardhat deploy --network rinkeby
    
